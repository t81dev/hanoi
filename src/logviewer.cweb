@* logviewer.cweb | AxionAI + HanoiVM Telemetry Log Viewer Interface

This module exposes structured read-only access to telemetry.json-like metadata
via debugfs, allowing both humans and AI agents to inspect install/runtime data.

@c
#include <linux/module.h>
#include <linux/kernel.h>
#include <linux/init.h>
#include <linux/fs.h>
#include <linux/debugfs.h>
#include <linux/uaccess.h>
#include <linux/slab.h>

#define LOGVIEW_NAME "telemetry-view"

static struct dentry *logview_debug_dir;
static char *log_buffer;

@<Telemetry Content@>=
static const char *telemetry_json =
"{\n"
"  \"package\": \"hanoivm\",\n"
"  \"version\": \"0.9.3-dev\",\n"
"  \"build\": {\n"
"    \"tangled\": true,\n"
"    \"compiled\": true,\n"
"    \"output\": [\"axion-ai.ko\", \"hanoivm_vm.ko\"]\n"
"  },\n"
"  \"test\": {\n"
"    \"executed\": true,\n"
"    \"passed\": true\n"
"  },\n"
"  \"load\": {\n"
"    \"axion-ai\": \"success\",\n"
"    \"hanoivm_vm\": \"success\"\n"
"  },\n"
"  \"ai_feedback\": {\n"
"    \"entropy_anomalies\": 0,\n"
"    \"rollback_events\": 0\n"
"  }\n"
"}\n";

@<Log Viewer DebugFS@>=
static ssize_t logview_read(struct file *file, char __user *ubuf,
                            size_t count, loff_t *ppos) {
  size_t len = strlen(telemetry_json);
  if (*ppos > 0 || count < len)
    return 0;
  if (copy_to_user(ubuf, telemetry_json, len))
    return -EFAULT;
  *ppos = len;
  return len;
}

static const struct file_operations logview_fops = {
    .owner = THIS_MODULE,
    .read = logview_read
};

@<Module Lifecycle@>=
static int __init logview_init(void) {
  pr_info("%s: initializing telemetry viewer\n", LOGVIEW_NAME);
  logview_debug_dir = debugfs_create_file(LOGVIEW_NAME, 0444, NULL, NULL, &logview_fops);
  return logview_debug_dir ? 0 : -ENOMEM;
}

static void __exit logview_exit(void) {
  debugfs_remove(logview_debug_dir);
  pr_info("%s: exiting\n", LOGVIEW_NAME);
}

module_init(logview_init);
module_exit(logview_exit);
MODULE_LICENSE("GPL");
MODULE_AUTHOR("Axion + HanoiVM Team");
MODULE_DESCRIPTION("DebugFS JSON log viewer for Axion AI + HanoiVM telemetry");
